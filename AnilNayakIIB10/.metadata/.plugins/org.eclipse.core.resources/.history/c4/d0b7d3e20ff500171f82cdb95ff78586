

BROKER SCHEMA com.anilnayak.esb


CREATE COMPUTE MODULE CreateDomain_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN 'XMLNSC' NAME 'ANOTHERXMLNSC';
		--Creating a domain 'XMLNSC' with the name 'AnotherXMLNSC' after MQMD

		CREATE FIELD OutputRoot.ANOTHERXMLNSC.Data VALUE 'Local Data';
		--Adding a field by name 'Data' with value 'Local Data';

		SET Environment.LogRequest='Logging Information';
		--Storing information pertaining to Logging in the element 'LogRequest';

		CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN 'MQRFH2' NAME 'MQRFH2';
		--Creating a domain 'mqrfh2' with the same name i.e. 'mqrfh2'

		SET OutputRoot.MQRFH2.usr.logInfo=Environment.LogRequest;
		--Setting the element i.e. Logrequest that is part of Environment into the newly created domain.
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
		--set Environment.data=ASBITSTREAM(InputRoot.XMLNSC,InputRoot.Properties.Encoding,InputRoot.Properties.CodedCharSetId);
		set Environment.data= ASBITSTREAM(InputRoot.XMLNSC) ;
		--AS CHARACTER CCSID 1208);
		
		--CREATE LASTCHILD OF Environment DOMAIN 'XMLNSC' PARSE(InputRoot.BLOB.BLOB ,InputRoot.Properties.Encoding,InputRoot.Properties.CodedCharSetId);
		

	END;
END MODULE;