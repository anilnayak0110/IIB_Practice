CREATE COMPUTE MODULE Test_Week_OfTheDay_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE sessionEndTime CHARACTER;
		SET sessionEndTime = '11:55:00.000000';
		DECLARE myDate DATE '2018-03-16';
				
		CASE EXTRACT(DAYOFWEEK FROM myDate)
			
		WHEN 6 THEN
			   SET OutputRoot.XMLNSC.SettelmentDate  = CAST(myDate + CAST('2' AS INTERVAL DAY) AS CHARACTER FORMAT 'yyyy-MM-dd');
		WHEN 7 THEN
			   SET OutputRoot.XMLNSC.SettelmentDate  = CAST(myDate + CAST('1' AS INTERVAL DAY) AS CHARACTER FORMAT 'yyyy-MM-dd');
		WHEN 5 THEN
			IF CURRENT_TIME > sessionEndTime THEN
			   SET OutputRoot.XMLNSC.SettelmentDate  = CAST(myDate + CAST('3' AS INTERVAL DAY) AS CHARACTER FORMAT 'yyyy-MM-dd');
			ELSE
				SET OutputRoot.XMLNSC.SettelmentDate = CAST(myDate AS CHARACTER FORMAT 'yyyy-MM-dd');
			END IF;
		ELSE
			IF CURRENT_TIME > sessionEndTime THEN
			   SET OutputRoot.XMLNSC.SettelmentDate  = CAST(myDate + CAST('1' AS INTERVAL DAY) AS CHARACTER FORMAT 'yyyy-MM-dd');
			ELSE
				SET OutputRoot.XMLNSC.SettelmentDate = CAST(myDate AS CHARACTER FORMAT 'yyyy-MM-dd');
			END IF;
			
		END CASE;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;