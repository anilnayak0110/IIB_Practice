CREATE COMPUTE MODULE selectFunction_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		CALL SelectFunctionOperations();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot = InputRoot;
	END;
	CREATE PROCEDURE SelectFunctionOperations ( )
	BEGIN
		/*Transfering a Simple Message*/
		SET OutputRoot.XMLNSC.Data.OutPut[]               = (SELECT R.Quantity, R.Author  FROM InputRoot.XMLNSC.Invoice.Purchases.Item[] AS R );
		
		/*Transfering Sample Message using count and while loop*/ 
		DECLARE i INTEGER 1 ;
		DECLARE count INTEGER CARDINALITY(InputRoot.XMLNSC.Invoice.Purchases.Item[]);
		WHILE (i<=count) DO
			
			SET OutputRoot.XMLNSC.Data.OutPut[i].Quantity = InputRoot.XMLNSC.Invoice.Purchases.Item[i].Quantity;
			SET OutputRoot.XMLNSC.Data.OutPut[i].Author   = InputRoot.XMLNSC.Invoice.Purchases.Item[i].Author;
			SET i = i + 1;
		END WHILE;
		
		/*The following example shows a more advanced transformation: which will execute faster*/ 
		
		SET OutputRoot.XMLNSC.Data.OutPut[]               = (
		                                                       SELECT R.Quantity AS Book.Quantity, 
		                                                              R.Author AS Book.Author
		                                                              FROM InputRoot.XMLNSC.Invoice.Purchases.Item[] AS R
		                                                              );
	   
	   /* Generate Output using operators, literals and fields */ 
	   SET OutputRoot.XMLNSC.Data.OutPut[]                = (
	                                                          SELECT  'Start' AS Header,
	                                                                  'Number Of Books: '   || R.Quantity AS Book.Quantity,
                                                                      'Name and Sure Name: '|| R.Author AS Book.Author,
	                                                                   'End' AS Tailer
	                                                                  FROM InputRoot.XMLNSC.Invoice.Purchases.Item[] AS R
	                                                                  ); 
	                                                                  
	  /* Add Atributes using SELECT Funtions */
	  
	  SET OutputRoot.XMLNSC.Data.OutPut[]                 = (
	                                                          SELECT R.Quantity AS Book.(XMLNSC.Attribute)Quantity, 
                                                                     R.Author  AS Book.(XMLNSC.Attribute)Author
                                                                     FROM InputRoot.XMLNSC.Invoice.Purchases.Item[] AS R
                                                                     );
     /* Select functions using WHERE Clause */
     SET OutputRoot.XMLNSC.Data.Output[]                  = (
                                                              SELECT R.Quantity AS Book.Quantity, 
                                                                     R.Author   AS Book.Author
                                                                     FROM InputRoot.XMLNSC.Invoice.Purchases.Item[] AS R
                                                                     WHERE R.Quantity = 2
    );                                                               );                                                                                  
	END;
END MODULE;