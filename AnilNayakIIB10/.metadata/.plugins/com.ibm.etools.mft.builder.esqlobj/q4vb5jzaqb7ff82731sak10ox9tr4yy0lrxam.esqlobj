/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		CALL InsertIntoDBUsingQuery();
		--CALL InsertIntoDBWithoutQuery();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot = InputRoot;
	END;
	CREATE PROCEDURE InsertIntoDBUsingQuery ( )
	BEGIN
		DECLARE SQL CHARACTER;
		DECLARE STR CHARACTER '(';
		DECLARE Inref REFERENCE TO InputRoot.XMLNSC.EmployeeInfo.Transaction[>];
		DECLARE count INTEGER CARDINALITY(InputRoot.XMLNSC.EmployeeInfo.Transaction[]);
		WHILE LASTMOVE(Inref) DO
			SET STR = STR || Inref.Name||','||Inref.Salary||'),(';
			MOVE Inref NEXTSIBLING;
		END WHILE;
		DECLARE N INTEGER LENGTH(STR);
		SET Environment.STR=OVERLAY(STR  PLACING ' ' FROM N FOR 1 )
		--SET Environment.STR = SUBSTRING(STR BEFORE ')' FOR 1);
		--SET SQL = 'INSERT INTO EMPLOYEE(ENAME,SALARY) VALUES(?,?)';
		SET Environment.Data.Result[]  = PASSTHRU(SQL TO Database.{MySQLDataSource} VALUES('anil',10000));
	END;
	CREATE PROCEDURE  InsertIntoDBWithoutQuery( )
	BEGIN
		DECLARE InsertRef ROW;
	   Insert into Database.{MySQLDataSource}.{SCHEMA_NAME}.{TABLE} (ENAME,SALARY) VALUES('Gayatree','30000.00');
	END;
