/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		CALL InsertWithOneQuery();
		--CALL InsertDCOTxnInfo();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot = InputRoot;
	END;	



	CREATE PROCEDURE InsertWithOneQuery( )
	BEGIN

		DECLARE lineRef REFERENCE TO InputRoot.XMLNSC.EmployeeInfo.Transaction[>];
		DECLARE ItemCount INTEGER 1;
		DECLARE lineItem ROW;
		
		DECLARE itemQuery CHARACTER '';
		DECLARE insertValuesItem CHARACTER 'INTO EMPLOYEE(ID,ENAME,SALARY,ADDRESS,MOB_NUMBER,DEPT_NAME,GENDER)
		VALUES(?,?,?,?,?,?,?)';

		ItemLine : WHILE LASTMOVE(lineRef) DO
			SET Environment.SQLBox[] = PASSTHRU('SELECT EMPLOYEE_SEQ.NEXTVAL FROM DUAL') ;
			SET itemQuery = itemQuery || insertValuesItem;
			SET lineItem.Row.col[ItemCount] VALUE   = Environment.SQLBox.NEXTVAL;
			SET lineItem.Row.col[ItemCount+1] VALUE = lineRef.Name;
			SET lineItem.Row.col[ItemCount+2] VALUE = COALESCE(lineRef.Salary,'');
			SET lineItem.Row.col[ItemCount+3] VALUE = COALESCE(lineRef.Address,'');
			SET lineItem.Row.col[ItemCount+4] VALUE = COALESCE(lineRef.MobNumber,'');
			SET lineItem.Row.col[ItemCount+5] VALUE = '';
			SET lineItem.Row.col[ItemCount+6] VALUE = '';
			SET ItemCount = ItemCount+5; --This will help to save next row.
			MOVE lineRef NEXTSIBLING;
		END WHILE ItemLine;



		PASSTHRU('INSERT ALL ' || itemQuery || 'SELECT 1 FROM DUAL', lineItem.Row.col[]);

	END;
	CREATE PROCEDURE InsertDCOTxnInfo ( )
	BEGIN
		DECLARE lineRef REFERENCE TO InputRoot.XMLNSC.AchDirectCredit.Transaction[>];
		DECLARE ItemCount INTEGER 1;
		DECLARE lineItem ROW;
		DECLARE endToEndId CHARACTER;
		SET endToEndId = InputRoot.XMLNSC.AchDirectCredit.Channel || InputRoot.XMLNSC.AchDirectCredit.BatchReference;
		DECLARE itemQuery CHARACTER '';
		DECLARE insertValuesItem CHARACTER 'INTO DIRECT_CREDIT_OUTWARD_TXN
		(
		  	DCO_TXN_INF_ID,
		  	DCO_GRP_HDR_ID_TXN_INFO_FK,
		  	TXN_REF,
		  	USER_REF,
		  	AMOUNT,
		  	BENEF_BANK,
		  	BENEF_ACC,
		  	BENEF_NAME,
		  	BENEF_ID,
		  	BENEF_ID_TYPE,
		  	PURP_OF_TRANSFER,
		  	DETAILS_OF_PMTS,
		  	STATUS,
		  	DESCRIPTION,
		  	CBS_TRAN_REF,
		  	CBS_PAY_REF,
		  	EXEC_DESC,
		  	END_TO_END_ID,
		  	MSG_ID,
		  	TXN_ID,
		  	CBO_GRP_STATUS,
		  	FAULT_CODE,
		  	FAULT_STRING,
		  	CBO_TXN_STATUS,
		  	CBS_REQUEST_MESSAGE
		  	) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)';
		  	
		  	
		ItemLine : WHILE LASTMOVE(lineRef) DO
			SET Environment.SQLBox[]                 = PASSTHRU('SELECT DCO_TXN_SEQ.NEXTVAL FROM DUAL') ;
			SET itemQuery                            = itemQuery || insertValuesItem;
			SET lineItem.Row.col[ItemCount] VALUE    = Environment.SQLBox.NEXTVAL;
			SET lineItem.Row.col[ItemCount+1] VALUE  = 111;
			SET lineItem.Row.col[ItemCount+2] VALUE  = lineRef.TransactionReference;
			SET lineItem.Row.col[ItemCount+3] VALUE  = COALESCE(lineRef.UserReference,'');
			SET lineItem.Row.col[ItemCount+4] VALUE  = lineRef.Amount;
			SET lineItem.Row.col[ItemCount+5] VALUE  = lineRef.BeneficiaryBank;
			SET lineItem.Row.col[ItemCount+6] VALUE  = lineRef.BeneficiaryAccount;
			SET lineItem.Row.col[ItemCount+7] VALUE  = COALESCE(lineRef.BeneficiaryName,'');
			SET lineItem.Row.col[ItemCount+8] VALUE  = COALESCE(lineRef.BeneficiaryId,'');
			SET lineItem.Row.col[ItemCount+9] VALUE  = COALESCE(lineRef.BeneficiaryIdType,'');
			SET lineItem.Row.col[ItemCount+10] VALUE = COALESCE(lineRef.PurposeOfTransfer,'');
			SET lineItem.Row.col[ItemCount+11] VALUE = COALESCE(lineRef.DetailsOfPayments,'');
			SET lineItem.Row.col[ItemCount+12] VALUE = '';
			SET lineItem.Row.col[ItemCount+13] VALUE = '';
			SET lineItem.Row.col[ItemCount+14] VALUE = '';
			SET lineItem.Row.col[ItemCount+15] VALUE = '';
			SET lineItem.Row.col[ItemCount+16] VALUE = '';
			SET lineItem.Row.col[ItemCount+17] VALUE = endToEndId;
			SET lineItem.Row.col[ItemCount+18] VALUE = '';
			SET lineItem.Row.col[ItemCount+19] VALUE = '';
			SET lineItem.Row.col[ItemCount+20] VALUE = '';
			SET lineItem.Row.col[ItemCount+21] VALUE = '';
			SET lineItem.Row.col[ItemCount+22] VALUE = '';
			SET lineItem.Row.col[ItemCount+23] VALUE = '';
			SET lineItem.Row.col[ItemCount+24] VALUE = '';
			SET ItemCount                            = ItemCount+25; --This will help to save next row.
			MOVE lineRef NEXTSIBLING;
		END WHILE ItemLine;

		PASSTHRU('INSERT ALL ' || itemQuery || 'SELECT * FROM DUAL', lineItem.Row.col[]);
	END;
