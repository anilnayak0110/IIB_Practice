CREATE COMPUTE MODULE mysqlDBInsert_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		CALL InsertWithOneQuery();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot = InputRoot;
	END;	



	CREATE PROCEDURE InsertWithOneQuery( )
	BEGIN

		DECLARE lineRef REFERENCE TO InputRoot.XMLNSC.EmployeeInfo.Transaction[>];
		DECLARE ItemCount INTEGER 1;
		DECLARE lineItem ROW;
		
		DECLARE itemQuery CHARACTER '';
		DECLARE insertValuesItem CHARACTER 'INTO EMPLOYEE(ID,ENAME,Salary)
		VALUES(?,?,?)';

		ItemLine : WHILE LASTMOVE(lineRef) DO
			SET Environment.SQLBox[] = PASSTHRU('SELECT EMPLOYEE_SEQ.NEXTVAL FROM DUAL') ;
			SET itemQuery = itemQuery || insertValuesItem;
			SET lineItem.Row.col[ItemCount] VALUE = Environment.SQLBox.NEXTVAL;
			SET lineItem.Row.col[ItemCount+1] VALUE = lineRef.Name;
			SET lineItem.Row.col[ItemCount+2] VALUE = '';
			SET ItemCount = ItemCount+3; --This will help to save next row.
			MOVE lineRef NEXTSIBLING;
		END WHILE ItemLine;



		PASSTHRU('INSERT ALL ' || itemQuery || 'SELECT 1 FROM DUAL', lineItem.Row.col[]);

	END;
	CREATE PROCEDURE InsertDCOTxnInfo ( )
	BEGIN
		DECLARE lineRef REFERENCE TO InputRoot.XMLNSC.EmployeeInfo.Transaction[>];
		DECLARE ItemCount INTEGER 1;
		DECLARE lineItem ROW;
		
		DECLARE itemQuery CHARACTER '';
		DECLARE insertValuesItem CHARACTER 'INTO DIRECT_CREDIT_OUTWARD_TXN
		(
		  	DCO_TXN_INF_ID,
		  	DCO_GRP_HDR_ID_TXN_INFO_FK,
		  	TXN_REF,
		  	USER_REF,
		  	AMOUNT,
		  	BENEF_BANK,
		  	BENEF_ACC,
		  	BENEF_NAME,
		  	BENEF_ID,
		  	BENEF_ID_TYPE,
		  	PURP_OF_TRANSFER,
		  	DETAILS_OF_PMTS,
		  	STATUS,
		  	DESCRIPTION,
		  	CBS_TRAN_REF,
		  	CBS_PAY_REF,
		  	EXEC_DESC,
		  	END_TO_END_ID,
		  	MSG_ID,
		  	TXN_ID,
		  	CBO_GRP_STATUS,
		  	FAULT_CODE,
		  	FAULT_STRING,
		  	CBO_TXN_STATUS,
		  	CBS_REQUEST_MESSAGE
		  	) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)';
	END;
END MODULE;