CREATE COMPUTE MODULE esq_indexes_symbols_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		CALL GetIndexUsingSymbol();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		
		SET OutputRoot = InputRoot;
	END;
	CREATE PROCEDURE GetIndexUsingSymbol ( )
	BEGIN
		DECLARE var1, var2, var3, var4, var5, var6, var7, var8, var9 INTEGER;
		DECLARE var10 ROW;
		
		SET var9 = InputRoot.XMLNSC.customer.items.item[].amount;
		SET var1 = InputRoot.XMLNSC.customer.items.item.amount; -- Give First amount ;
		SET var2 = InputRoot.XMLNSC.customer.items.item[1].amount; --Give First amount ;
		SET var3 = InputRoot.XMLNSC.customer.items.item[>].amount; --Give First amount ;
		SET var4 = InputRoot.XMLNSC.customer.items.item[>1].amount; --Give First amount ;
		SET var5 = InputRoot.XMLNSC.customer.items.item[>2].amount; --Give Second amount;
		SET var6 = InputRoot.XMLNSC.customer.items.item[<].amount; --Give Last amount;
		SET var7 = InputRoot.XMLNSC.customer.items.item[<1].amount;  --Give Last amount;
		SET var8 = InputRoot.XMLNSC.customer.items.item[<2].amount; --Give Second amount;
		
		
	
	END;
END MODULE;