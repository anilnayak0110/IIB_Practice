/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		--CALL InsertIntoDBUsingQuery();
		--CALL InsertIntoDBWithoutQuery();
		CALL InsertWithOneQuery();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot = InputRoot;
	END;
	
	CREATE PROCEDURE InsertIntoDBWithoutQuery( )
	BEGIN
		DECLARE InsertRef ROW;
		--Insert into Database.{MySQLDataSource}.{SCHEMA_NAME}.{TABLE} (ENAME,SALARY) VALUES (Environment.STR1);
	END;

	CREATE PROCEDURE InsertWithOneQuery( )
	BEGIN

		DECLARE lineRef REFERENCE TO InputRoot.XMLNSC.EmployeeInfo.Transaction[>];

		SET ItemCount = 1;
		DECLARE itemQuery CHARACTER '';
		DECLARE insertValuesItem CHARACTER 'INTO EMPLOYEE(NAME,Salary)
		VALUES(?,?)';

		ItemLine : WHILE LASTMOVE(lineRef) DO
			SET itemQuery = itemQuery || insertValuesItem;
			SET lineItem.Row.col[ItemCount] VALUE = lineRef.Name;
			SET lineItem.Row.col[ItemCount+1] VALUE = lineRef.Salary;
			SET ItemCount = ItemCount+2; --This will help to save next row.
			MOVE lineRef NEXTSIBLING REPEAT NAME;
		END WHILE ItemLine;      
        


		PASSTHRU('INSERT ALL ' || itemQuery || 'SELECT 1 FROM DUAL', lineItem.Row.col[]);

	END;
