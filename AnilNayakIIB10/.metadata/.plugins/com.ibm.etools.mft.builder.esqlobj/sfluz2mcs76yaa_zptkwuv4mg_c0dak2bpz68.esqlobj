/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		DECLARE N INTEGER 0;
		DECLARE I INTEGER 1;
		DECLARE FLAG BOOLEAN;
		WHILE N < 1000 DO
			IF ISPRIME(N) THEN
				SET OutputRoot.JSON.Data.prime[I] = N;
				CALL initLog4j(LOG4J_CONFIG) INTO FLAG;
				CALL writeToLogFile(MessageFlowLabel, 'Log_Flow', 'INFO','PRIME NUMBER') INTO FLAG;
				SET I = I + 1;
			END IF;
			SET N = N + 1;
		END WHILE;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	CREATE FUNCTION ISPRIME(IN Num INTEGER) RETURNS BOOLEAN
	BEGIN
		DECLARE I INTEGER 2;
		WHILE MOD(Num,I) <> 0 AND I < Num DO
			SET I = I + 1;
		END WHILE;
		IF I = Num THEN
			RETURN TRUE;
		ELSE
			RETURN FALSE;
		END IF;
	END;

	CREATE FUNCTION initLog4j( IN CONFIG_FILE_NAME CHARACTER )
	RETURNS BOOLEAN
	LANGUAGE JAVA
	EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.initLog4j";

	CREATE FUNCTION writeToLogFile( IN COMPONENT_NAME CHARACTER,
	IN LOGGER_NAME CHARACTER,
	IN LEVEL CHARACTER,
	IN TEXT CHARACTER )
	RETURNS BOOLEAN
	LANGUAGE JAVA
	EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.log";
