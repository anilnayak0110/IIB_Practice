CREATE COMPUTE MODULE selectFunction_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		CALL SelectFunctionOperations();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot = InputRoot;
	END;
	CREATE PROCEDURE SelectFunctionOperations ( )
	BEGIN
		/*Transfering a Simple Message*/
		SET OutputRoot.XMLNSC.Data.OutPut[]               = (SELECT R.Quantity, R.Author  FROM InputRoot.XMLNSC.Invoice.Purchases.Item[] AS R );
		
		/*Transfering Sample Message using count and while loop*/ 
		DECLARE i INTEGER 1 ;
		DECLARE count INTEGER CARDINALITY(InputRoot.XMLNSC.Invoice.Purchases.Item[]);
		WHILE (i<=count) DO
			
			SET OutputRoot.XMLNSC.Data.OutPut[i].Quantity = InputRoot.XMLNSC.Invoice.Purchases.Item[i].Quantity;
			SET OutputRoot.XMLNSC.Data.OutPut[i].Author   = InputRoot.XMLNSC.Invoice.Purchases.Item[i].Author;
			
		END WHILE;                                 
	END;
END MODULE;