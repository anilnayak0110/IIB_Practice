CREATE COMPUTE MODULE StausReport_WPS_Compute
	DECLARE SCH_NAME EXTERNAL CHARACTER;
	DECLARE DSNNAME EXTERNAL CHARACTER;
	DECLARE WPS_TABLE1 EXTERNAL CHARACTER;
	DECLARE WPS_TABLE2 EXTERNAL CHARACTER;
	DECLARE LOG4J_CONF_FILE EXTERNAL CHARACTER;
	DECLARE chlId,reference,employeeCR CHARACTER;
	DECLARE ChlSifRefName CHARACTER;
	DECLARE batchStatus, recordStatus ROW;
	DECLARE flowName CHARACTER MessageFlowLabel;

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL ProcessGetStatusRequest();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE ProcessGetStatusRequest() BEGIN
		DECLARE rc BOOLEAN;
		DECLARE txnRef REFERENCE TO OutputRoot;

		CREATE FIELD OutputRoot.XMLNSC.WpsSifStatusResponse;
		DECLARE batchRef REFERENCE TO OutputRoot.XMLNSC.WpsSifStatusResponse;
		/*initialising Log4j*/
		CALL initLog4j(LOG4J_CONF_FILE) INTO rc;
		IF ( rc = FALSE ) THEN
			DECLARE msg CHARACTER ;
			SET msg = 'Log4J Initialization failed.';
		END IF;
		CALL writeToLogFile(flowName, 'WPS_STATUSINFO', 'INFO',' ---------START--------') INTO rc;
		CALL writeToLogFile(flowName, 'WPS_STATUSINFO', 'INFO','WPS Status request received') INTO rc;

		SET chlId = InputRoot.XMLNSC.WpsSifStatusRequest.Channel;
		SET reference = InputRoot.XMLNSC.WpsSifStatusRequest.Reference;
		CALL writeToLogFile(flowName, 'WPS_STATUSINFO', 'INFO','Channel :'|| chlId) INTO rc;
		CALL writeToLogFile(flowName, 'WPS_STATUSINFO', 'INFO','Reference :' || reference) INTO rc;

		SET Environment.chlId = chlId;
		SET Environment.reference = reference;


		SET ChlSifRefName = chlId||reference ;
		SET batchStatus.hd[] = SELECT A.CBS_TXN_REF,A.ERROR_LIST,A.CBO_STATUS,A.CBS_FAULT_CODE,A.CBS_FAULT_STRING,A.WPS_SIF_HEADER_INFO_ID,A.CBS_PAY_REF FROM Database.{SCH_NAME}.{WPS_TABLE1} AS A WHERE A.CHL_REFERENCE = ChlSifRefName;
		SET recordStatus.emp.rd[] = SELECT B.SIF_FILE_NAME,B.CBS_PAY_REF,B.REFERENCE_NUMBER,B.STATUS,B.CBS_FAULT_CODE,B.CBS_FAULT_STRING,B.ERROR_LIST FROM Database.{SCH_NAME}.{WPS_TABLE2} AS B WHERE B.WPS_SIF_HEADER_INFO_ID = batchStatus.hd.WPS_SIF_HEADER_INFO_ID;
		/*SETTING UP REPLY TO Q AND REPLY TO QMGR*/

		SET OutputRoot.MQMD.ReplyToQMgr = InputRoot.MQMD.ReplyToQMgr;
		SET OutputRoot.MQMD.ReplyToQ = InputRoot.MQMD.ReplyToQ;


		IF CARDINALITY(batchStatus.hd[])>0 OR CARDINALITY(recordStatus.rd[])>0 THEN
			/*checking is thre any records found for given refernce or not*/
			CALL writeToLogFile(flowName, 'WPS_STATUSINFO', 'INFO','Records Found for Given Reference') INTO rc;

			SET batchRef.Channel = chlId;
			SET batchRef.Reference = reference;
			SET batchRef.CBSReference = batchStatus.hd.CBS_PAY_REF;
			SET batchRef.Status = batchStatus.hd.CBO_STATUS;
			IF batchStatus.hd.CBO_STATUS = 'CBO_TECH_VAL_FAILED' OR batchStatus.hd.CBO_STATUS = 'ACK_REP_FAILURE' THEN
				SET batchRef.ResponseCode = 'WPS98'; /*this should be error list in case of CBO failure*/
				SET batchRef.ResponseText = batchStatus.hd.ERROR_LIST;
			ELSE
				SET batchRef.ResponseCode = batchStatus.hd.CBS_FAULT_CODE; /*this should be error list in case of CBO failure*/
				SET batchRef.ResponseText = batchStatus.hd.CBS_FAULT_STRING;
			END IF;

			DECLARE recordRef REFERENCE TO recordStatus.emp.rd[>];
			-- IF EXISTS(recordStatus.emp.rd[]) THEN

			WHILE LASTMOVE(recordRef) DO
				CREATE LASTCHILD OF batchRef AS txnRef NAME 'Employee';
				SET txnRef.TransactionReference = recordRef.REFERENCE_NUMBER; /*This should be the transaction ref which is coming from channel*/
				SET txnRef.CBOReference = recordRef.SIF_FILE_NAME; /*Adding the file name as reference suggested by zafer*/
				SET txnRef.CBSReference = recordRef.CBS_PAY_REF;
				SET txnRef.Status = recordRef.STATUS;

				IF recordRef.STATUS = 'CBS_EMP_CREDIT_FAILURE' OR recordRef.STATUS = 'CBS_STLEACC_CREDIT_FAILURE' THEN
					SET txnRef.ResponseCode = recordRef.CBS_FAULT_CODE;
					SET txnRef.ResponseText = recordRef.CBS_FAULT_STRING;
				ELSEIF batchStatus.hd.CBO_STATUS = 'CBO_TECH_VAL_FAILED' OR batchStatus.hd.CBO_STATUS = 'ACK_REP_FAILURE' THEN
					SET txnRef.ResponseText = recordRef.ERROR_LIST;
				END IF;

				MOVE recordRef NEXTSIBLING;
			END WHILE;
		ELSE
			CALL writeToLogFile(flowName, 'WPS_STATUSINFO', 'INFO','Records Not Found for the given reference') INTO rc;
			SET batchRef.Channel = chlId;
			SET batchRef.Reference = reference;
			SET batchRef.CBSReference = '';
			SET batchRef.Status = '';
			SET batchRef.ResponseCode = 'WPS98'; /*this should be error list in case of CBO failure*/
			SET batchRef.ResponseText = 'No Records Found For Given Reference';
		END IF;
	END;
END MODULE;