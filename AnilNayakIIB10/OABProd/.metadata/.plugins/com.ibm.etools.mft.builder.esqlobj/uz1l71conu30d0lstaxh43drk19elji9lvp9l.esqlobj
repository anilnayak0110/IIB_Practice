/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		 CALL CopyMessageHeaders();
		 CALL initLog4j(LOG4J_CONF_FILE) INTO rc;
		IF ( rc = FALSE ) THEN
			DECLARE msg CHARACTER ;
			SET msg = 'Log4J Initialization failed.';
		END IF;
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE Exce CHARACTER;
		SET OutputRoot.MQMD.ReplyToQMgr = InputRoot.MQMD.ReplyToQMgr;
		SET OutputRoot.MQMD.ReplyToQ = InputRoot.MQMD.ReplyToQ;
		SET Exce = com.oab.exceptionhandler.getExceptionDesc(InputRoot,OutputRoot,InputExceptionList);
		DECLARE WPSRef REFERENCE TO OutputRoot.XMLNSC;
		CREATE LASTCHILD OF OutputRoot.XMLNSC AS WPSRef NAME 'WPSResponse';
		SET WPSRef.ResponseCode = 'WPS99';
		SET WPSRef.ResponseString = Exce;
		CALL writeToLogFile(MessageFlowLabel, 'WPS_INFO', 'INFO','Sending Failure Acknoledgement') INTO rc;
		CALL writeToLogFile(MessageFlowLabel, 'WPS_INFO', 'INFO','ExceptionDescription :'|| Exce) INTO rc;
		CALL writeToLogFile(MessageFlowLabel, 'WPS_INFO', 'INFO','***************END***************') INTO rc;
		
	END;
