/*
Here, we will be Concatanating few elements and sending the output.
Important to note here is, we need to set the parser as 'XMLNSC'

Following will be the input message

	<customer>
		<id>1234</id>
		<fname>Sreedhar</fname>
		<mname/>
		<lname>Shastry</lname>
	</customer>
	
Following will be the output message

 
	 <customer>
 		<details>1234Sreedharvinayaka raoShastry</details>
	</customer>
	
*/

BROKER SCHEMA com.anilnayak.esb


CREATE COMPUTE MODULE Concatinate_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		CALL ConcatinateMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot = InputRoot;
	END;
	
	CREATE PROCEDURE ConcatinateMessage ( )
	BEGIN
		SET OutputRoot.XMLNSC.customer = InputRoot.XMLNSC.customer.id    ||' '||
		                                 InputRoot.XMLNSC.customer.fname ||' '||
		                                 InputRoot.XMLNSC.customer.mname ||' '||
		                                 InputRoot.XMLNSC.customer.lname ;
	END;
END MODULE;
