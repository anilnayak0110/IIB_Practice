BROKER SCHEMA com.anilnayak.esb
/*
In this example we will supply a sample XML, where output will have following extra elements 

	<OrderStatus> -- A static text supplied as ' Rejected '
	<TotalItems> -- A Dynamic text which gives us how many elements are there under a specified element. 


Sample Input

<Order>
	<CustomerDetails>
		<Name>
		<Title>Mr</Title>
		<FirstName>Sreedhar</FirstName>
		<Surname>Shastry</Surname>
		</Name>
	<Address>
		<Address1>Chantry Close</Address1>
		<Address2>Apartment 5</Address2>
		<Town>Vancouver</Town>
		<State>Canada</State>
		<Country>Canada</Country>
	</Address>
	<CustomerID>098219</CustomerID>
	</CustomerDetails>
	<Items>
		<Item>
		<Name>IPOD4GB</Name>
		<ID>1234</ID>
		<Price>1111.0</Price>
		</Item>
		<Item>
		<Name>IPADTOUCH</Name>
		<ID>478310</ID>
		<Price>9999.0</Price>
		</Item>
	</Items>
</Order>

Sample Output

<Order>
 <CustomerDetails>
  <CustomerID>098219</CustomerID>
  <FullName>Mr Sreedhar Shastry</FullName>
  <Address>
   <Street>Chantry Close Apartment 5</Street>
   <Town>Vancouver</Town>
   <State>Canada</State>
   <Country>Canada</Country>
  </Address>
 </CustomerDetails>
 
 <OrderStatus>Rejected</OrderStatus>
 
 <Items>
  <Item>
   <Name>IPOD4GB</Name>
   <ID>1234</ID>
   <Price>1111.0</Price>
  </Item>
  <Item>
   <Name>IPADTOUCH</Name>
   <ID>478310</ID>
   <Price>9999.0</Price>
  </Item>
 </Items>
 
 <TotalItems>2</TotalItems>
 
</Order>

*/
CREATE COMPUTE MODULE addExtraElement_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL    CopyMessageHeaders();
		 CALL     CopyEntireMessage();
		 CALL AddExtraElementsInXml();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot = InputRoot;
	END;
	
	CREATE PROCEDURE AddExtraElementsInXml() BEGIN
		DECLARE Name REFERENCE TO InputRoot.XMLNSC.Order.CustomerDetails.Name;
		DECLARE Address  REFERENCE TO InputRoot.XMLNSC.Order.CustomerDetails.Address;
		
		SET OutputRoot.XMLNSC.Order.CustomerDetails.CustomerID       = InputRoot.XMLNSC.Order.CustomerDetails.CustomerID;
		
		SET OutputRoot.XMLNSC.Order.CustomerDetails.FullName         = Name.Title        ||' '||
		                                                               Name.FirstName    ||' '||
		                                                               Name.Surname;
	   
	    SET OutputRoot.XMLNSC.Order.CustomerDetails.Address.Street   = Address.Address1      ||' '||
	                                                                   Address.Address2;
	                                                                   
	    SET OutputRoot.XMLNSC.Order.CustomerDetails.Address.Town     = Address.Town;
	    SET OutputRoot.XMLNSC.Order.CustomerDetails.Address.State    = Address.State;
	    SET OutputRoot.XMLNSC.Order.CustomerDetails.Address.Country  = Address.Country;
	    
	    SET OutputRoot.XMLNSC.Order.OrderStatus                      = 'Rejected';
	    
	    SET OutputRoot.XMLNSC.Order.Items.Item[]                     = InputRoot.XMLNSC.Order.Items.Item[];
	    SET OutputRoot.XMLNSC.Order.TotalItems                       = CARDINALITY(InputRoot.XMLNSC.Order.Items.*[]);  
	END;
END MODULE;
