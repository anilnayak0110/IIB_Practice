/*
In this example we will Input following XML and try to get the values of <item> 'id' and <name> 'code'
<item id="12345">
 <id>ABCDE</id>
 <name code='1x'>Test</name>
</item>
Note that this example is useful when we have similar names to attributes and elements.
*/


BROKER SCHEMA com.anilnayak.esb


CREATE COMPUTE MODULE AccessingAttribute_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		CALL AccessAttributeElement();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot = InputRoot;
	END;
	CREATE PROCEDURE AccessAttributeElement ( )
	BEGIN
		DECLARE ItemAttributeValue, NameAttributeValue, ElemenetId CHARACTER;
		
		SET ItemAttributeValue = FIELDVALUE(InputRoot.XMLNSC.item.(XMLNSC.Attribute)id);
		SET NameAttributeValue = FIELDVALUE(InputRoot.XMLNSC.item.name.(XMLNSC.Attribute)code);
		SET ElemenetId         = FIELDVALUE(InputRoot.XMLNSC.item.(XMLNSC.Field)id);
	END;
END MODULE;
